<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Phoenix Admin - Products</title>
    <link rel="stylesheet" href="/css/admin.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <!-- Add SweetAlert2 CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <link rel="stylesheet" href="/css/admin/products.css">
</head>
<body>
    <!-- Mobile Menu Toggle -->
    <button class="mobile-menu-toggle">
        <i class="fas fa-bars"></i>
    </button>

    <div class="admin-sidebar">
        <div class="admin-logo">
            <img src="/images/phoenix-logo.png" alt="Phoenix Admin">
            <div class="admin-brand-name">
                <span class="phoenix">Phoenix</span>
            </div>
        </div>
        <ul class="admin-nav">
            <li class="admin-nav-item">
                <a href="/admin/dashboard" class="admin-nav-link">
                    <i class="fas fa-tachometer-alt"></i> Dashboard
                </a>
            </li>
            <li class="admin-nav-item">
                <a href="/admin/products" class="admin-nav-link active">
                    <i class="fas fa-headphones"></i> Products
                </a>
            </li>
            <li class="admin-nav-item">
                <a href="/admin/categories" class="admin-nav-link">
                    <i class="fas fa-list"></i> Categories
                </a>
            </li>
            <li class="admin-nav-item">
                <a href="/admin/users" class="admin-nav-link">
                    <i class="fas fa-users"></i> Customers
                </a>
            </li>
            <li class="admin-nav-item">
                <form action="/admin/logout" method="POST">
                    <button type="submit" class="admin-nav-link">
                        <i class="fas fa-sign-out-alt"></i> Logout
                    </button>
                </form>
            </li>
        </ul>
    </div>

    <div class="admin-content">
        <div class="admin-header">
            <div class="admin-title">
                <h1>Products</h1>
            </div>
            <div class="admin-user">
                <div class="admin-avatar">
                    <img src="/images/admin-avatar.svg" alt="<%= user.fullname %>">
                </div>
                <div class="admin-user-info">
                    <div class="admin-user-name"><%= user.fullname %></div>
                    <div class="admin-user-role">Administrator</div>
                </div>
            </div>
        </div>

        <div class="card">
            <div class="card-header">
                <h2>Manage Products</h2>
                <div class="card-header-actions">
                    <a href="/admin/products/add" class="btn-add-product">
                        <span class="material-icons">add_circle</span>
                        <span>Add Product</span>
                    </a>
                </div>
            </div>
            <div class="card-body">
                <form action="/admin/products" method="GET" class="search-form">
                    <div class="input-group">
                        <input type="text" class="form-control" placeholder="Search products..." name="search" value="<%= searchQuery %>">
                        <div class="input-group-append">
                            <button class="btn btn-primary" type="submit">
                                <i class="fas fa-search"></i> Search
                            </button>
                        </div>
                    </div>
                </form>

                <div class="table-responsive">
                    <table>
                        <thead>
                            <tr>
                                <th>Image</th>
                                <th>Product Name</th>
                                <th>Category</th>
                                <th>Brand</th>
                                <th>Price</th>
                                <th>Stock</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% if (products && products.length > 0) { %>
                                <% products.forEach(product => { %>
                                    <tr>
                                        <td>
                                            <% const mainImage = product.images.find(img => img.isMain) || product.images[0] %>
                                            <img src="<%= mainImage ? mainImage.url : '/images/default-product.png' %>" alt="<%= product.name %>" class="product-thumbnail">
                                        </td>
                                        <td><%= product.name %></td>
                                        <td><%= product.categoryId ? product.categoryId.name : product.category %></td>
                                        <td><%= product.brand %></td>
                                        <td>
                                            <% if (product.salePrice && product.salePrice < product.regularPrice) { %>
                                                <span class="text-danger">₹<%= product.salePrice.toFixed(2) %></span>
                                                <small class="text-muted"><del>₹<%= product.regularPrice.toFixed(2) %></del></small>
                                            <% } else { %>
                                                ₹<%= product.regularPrice.toFixed(2) %>
                                            <% } %>
                                        </td>
                                        <td>
                                            <% if (product.stock <= 0) { %>
                                                <span class="badge badge-danger">Out of Stock</span>
                                            <% } else if (product.stock < 10) { %>
                                                <span class="badge badge-warning"><%= product.stock %> left</span>
                                            <% } else { %>
                                                <%= product.stock %>
                                            <% } %>
                                        </td>
                                        <td>
                                            <div class="custom-control custom-switch">
                                                <input type="checkbox" class="custom-control-input product-status-toggle"
                                                       id="status-<%= product._id %>" 
                                                       data-id="<%= product._id %>" 
                                                       <%= product.isActive ? 'checked' : '' %>>
                                                <label class="custom-control-label" for="status-<%= product._id %>">
                                                    <%= product.isActive ? 'Active' : 'Inactive' %>
                                                </label>
                                            </div>
                                        </td>
                                        <td>
                                            <a href="/admin/products/<%= product._id %>/edit" class="btn btn-sm btn-info">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <button class="btn btn-sm btn-danger delete-product" data-id="<%= product._id %>">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </td>
                                    </tr>
                                <% }) %>
                            <% } else { %>
                                <tr>
                                    <td colspan="8" class="text-center">No products found</td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>
                </div>

                <!-- Pagination -->
                <% if (totalPages > 1) { %>
                    <div class="admin-pagination">
                        <div class="pagination-wrapper">
                            <div class="pagination">
                                <!-- Previous Button -->
                                <% if (hasPrevPage) { %>
                                    <button
                                        class="page-btn pagination-btn"
                                        data-page="<%= prevPage %>"
                                        data-search="<%= searchQuery || '' %>">
                                        <span class="material-icons">chevron_left</span>
                                    </button>
                                <% } else { %>
                                    <button class="page-btn" disabled>
                                        <span class="material-icons">chevron_left</span>
                                    </button>
                                <% } %>

                                <!-- Page Numbers -->
                                <% if (typeof pageNumbers !== 'undefined' && pageNumbers.length > 0) { %>
                                    <% pageNumbers.forEach(pageNum => { %>
                                        <% if (pageNum === currentPage) { %>
                                            <button class="page-btn active"><%= pageNum %></button>
                                        <% } else { %>
                                            <button
                                                class="page-btn pagination-btn"
                                                data-page="<%= pageNum %>"
                                                data-search="<%= searchQuery || '' %>">
                                                <%= pageNum %>
                                            </button>
                                        <% } %>
                                    <% }) %>
                                <% } %>

                                <!-- Next Button -->
                                <% if (hasNextPage) { %>
                                    <button
                                        class="page-btn pagination-btn"
                                        data-page="<%= nextPage %>"
                                        data-search="<%= searchQuery || '' %>">
                                        <span class="material-icons">chevron_right</span>
                                    </button>
                                <% } else { %>
                                    <button class="page-btn" disabled>
                                        <span class="material-icons">chevron_right</span>
                                    </button>
                                <% } %>
                            </div>
                        </div>
                    </div>
                <% } %>
            </div>
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div class="modal fade delete-modal" id="deleteModal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirm Delete</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete this product? This action cannot be undone.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" id="confirmDelete">Delete</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <!-- Add SweetAlert2 JS -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    
    <script>
        $(document).ready(function() {
            // Mobile menu toggle
            $('.mobile-menu-toggle').click(function() {
                $('.admin-sidebar').toggleClass('active');
            });

            // Handle admin products pagination with AJAX
            const adminPaginationContainer = document.querySelector('.admin-pagination .pagination-wrapper');
            const adminProductsTable = document.querySelector('.table-responsive');

            if (adminPaginationContainer) {
                adminPaginationContainer.addEventListener('click', async (e) => {
                    if (e.target.closest('.pagination-btn')) {
                        const btn = e.target.closest('.pagination-btn');
                        const page = btn.dataset.page || 1;
                        const search = btn.dataset.search || '';

                        try {
                            const url = `/admin/products?page=${page}&search=${search}`;

                            const res = await fetch(url, {
                                headers: {
                                    'X-Requested-With': 'XMLHttpRequest'
                                }
                            });

                            if (!res.ok) throw new Error('Failed to fetch products');

                            const html = await res.text();

                            // Replace the products table and pagination content
                            const temp = document.createElement('div');
                            temp.innerHTML = html;

                            const newTable = temp.querySelector('.table-responsive');
                            const newPagination = temp.querySelector('.admin-pagination .pagination-wrapper');

                            if (newTable && adminProductsTable) {
                                adminProductsTable.innerHTML = newTable.innerHTML;
                            }

                            if (newPagination && adminPaginationContainer) {
                                adminPaginationContainer.innerHTML = newPagination.innerHTML;
                            }

                        } catch (err) {
                            console.error('Admin products pagination fetch error:', err);
                        }
                    }
                });
            }

            // Close sidebar when clicking outside on mobile
            $(document).click(function(event) {
                if (!$(event.target).closest('.admin-sidebar').length && 
                    !$(event.target).closest('.mobile-menu-toggle').length && 
                    $('.admin-sidebar').hasClass('active')) {
                    $('.admin-sidebar').removeClass('active');
                }
            });

            // Product status toggle
            $('.product-status-toggle').change(function() {
                const productId = $(this).data('id');
                const isActive = $(this).prop('checked');
                const toggleElement = $(this);

                console.log('Product status toggle clicked:', {
                    productId: productId,
                    isActive: isActive,
                    url: `/admin/products/toggle-status/${productId}`
                });

                // Disable the toggle during the request to prevent multiple clicks
                toggleElement.prop('disabled', true);

                $.ajax({
                    url: `/admin/products/toggle-status/${productId}`,
                    method: 'POST',
                    data: JSON.stringify({ isActive }),
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    success: function(response) {
                        console.log('AJAX Success Response:', response);

                        if (response.success) {
                            // Update the toggle state based on server response
                            toggleElement.prop('checked', response.isActive);

                            console.log('Status updated successfully:', {
                                productId: productId,
                                newStatus: response.isActive
                            });

                            Swal.fire({
                                icon: 'success',
                                title: 'Status Updated',
                                text: response.message || 'Product status has been updated successfully',
                                toast: true,
                                position: 'top-end',
                                showConfirmButton: false,
                                timer: 3000
                            });
                        } else {
                            console.error('Server returned success=false:', response);

                            // Revert the toggle state on failure
                            toggleElement.prop('checked', !isActive);

                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: response.message || 'Failed to update product status',
                                toast: true,
                                position: 'top-end',
                                showConfirmButton: false,
                                timer: 3000
                            });
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error('AJAX Error:', {
                            status: xhr.status,
                            statusText: xhr.statusText,
                            responseText: xhr.responseText,
                            error: error,
                            url: `/admin/products/toggle-status/${productId}`
                        });

                        // Revert the toggle state on error
                        toggleElement.prop('checked', !isActive);

                        let errorMessage = 'Failed to update product status';
                        if (xhr.responseJSON && xhr.responseJSON.message) {
                            errorMessage = xhr.responseJSON.message;
                        } else if (xhr.status === 404) {
                            errorMessage = 'Product not found';
                        } else if (xhr.status === 401) {
                            errorMessage = 'Authentication required';
                        } else if (xhr.status === 403) {
                            errorMessage = 'Access denied';
                        }

                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: errorMessage,
                            toast: true,
                            position: 'top-end',
                            showConfirmButton: false,
                            timer: 3000
                        });
                    },
                    complete: function() {
                        // Re-enable the toggle after the request completes
                        toggleElement.prop('disabled', false);
                    }
                });
            });

            // Delete product
            $('.delete-product').click(function() {
                const productId = $(this).data('id');
                
                Swal.fire({
                    title: 'Are you sure?',
                    text: "This product will be soft deleted. This action can be undone by an administrator.",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Yes, delete it!',
                    cancelButtonText: 'Cancel',
                    reverseButtons: true
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '/admin/products/' + productId,
                            method: 'DELETE',
                            success: function(response) {
                                if (response.success) {
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'Deleted!',
                                        text: 'Product has been soft deleted successfully.',
                                        showConfirmButton: false,
                                        timer: 1500
                                    }).then(() => {
                                        window.location.reload();
                                    });
                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Error',
                                        text: response.message || 'Failed to delete product'
                                    });
                                }
                            },
                            error: function(xhr) {
                                let errorMessage = 'Failed to delete product';
                                if (xhr.responseJSON && xhr.responseJSON.message) {
                                    errorMessage = xhr.responseJSON.message;
                                }
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: errorMessage
                                });
                            }
                        });
                    }
                });
            });
        });
    </script>
</body>
</html> 