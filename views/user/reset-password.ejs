<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset Password - Phoenix Headphones</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <link rel="stylesheet" href="/css/main.css">
    <link rel="stylesheet" href="/css/auth.css">
</head>
<body>
    <div class="auth-page">
        <div class="container">
            <div class="auth-container">
                <div class="auth-form-container">
                    <div class="auth-header">
                        <h1>Reset Password</h1>
                        <p>Create a new secure password for your account</p>
                        <div class="progress-indicator">
                            <div class="progress-step completed">
                                <span class="material-icons">check</span>
                                <span>Request Reset</span>
                            </div>
                            <div class="progress-step completed">
                                <span class="material-icons">check</span>
                                <span>Verification</span>
                            </div>
                            <div class="progress-step active">
                                <span class="material-icons">lock_reset</span>
                                <span>Reset Password</span>
                            </div>
                        </div>
                    </div>

                    <% if (typeof error !== 'undefined' && error) { %>
                        <div class="alert alert-danger">
                            <span class="material-icons">error</span>
                            <div class="alert-content">
                                <strong>Error!</strong> <%- error %>
                            </div>
                            <button class="alert-close">
                                <span class="material-icons">close</span>
                            </button>
                        </div>
                    <% } %>
                    
                    <% if (typeof success !== 'undefined' && success) { %>
                        <div class="alert alert-success">
                            <span class="material-icons">check_circle</span>
                            <div class="alert-content">
                                <strong>Success!</strong> <%- success %>
                            </div>
                            <button class="alert-close">
                                <span class="material-icons">close</span>
                            </button>
                        </div>
                    <% } %>

                    <form class="auth-form" action="/reset-password" method="POST" id="reset-form" novalidate data-validate>
                        <input type="hidden" name="email" value="<%= email %>">
                        
                        <div class="form-group">
                            <label for="newPassword" class="form-label">New Password</label>
                            <div class="form-input-group">
                                <span class="material-icons form-input-icon">lock</span>
                                <input type="password" id="newPassword" name="newPassword" class="form-control" placeholder="Enter new password">
                                <button type="button" class="password-toggle">
                                    <span class="material-icons">visibility_off</span>
                                </button>
                            </div>
                            <div id="password-error" class="field-error" role="alert"></div>
                            <div class="password-strength" id="password-strength">
                                <div class="strength-bar">
                                    <div class="strength-progress" id="strength-progress"></div>
                                </div>
                                <span class="strength-text" id="strength-text">Password strength</span>
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="confirmPassword" class="form-label">Confirm Password</label>
                            <div class="form-input-group">
                                <span class="material-icons form-input-icon">lock</span>
                                <input type="password" id="confirmPassword" name="confirmPassword" class="form-control" placeholder="Confirm new password">
                            </div>
                            <div id="confirm-password-error" class="field-error" role="alert"></div>
                        </div>

                        <button type="submit" class="btn btn-primary btn-block">Reset Password</button>
                    </form>

                    <div class="auth-footer">
                        <p>Remember your password? <a href="/login" class="auth-link">Login</a></p>
                    </div>
                </div>
                
                <div class="auth-banner">
                    <div class="auth-banner-content">
                        <div class="auth-logo">
                            <img src="/images/phoenix-logo.png" alt="Phoenix Headphones">
                        </div>
                        <h2>Password Recovery</h2>
                        <p>Create a new secure password to protect your Phoenix Headphones account.</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/js/form-validation.js"></script>

    <link rel="stylesheet" href="/css/user/reset-password.css">
    <link rel="stylesheet" href="/css/form-validation.css">

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const resetForm = document.getElementById('reset-form');
            const passwordInput = document.getElementById('newPassword');
            const confirmPasswordInput = document.getElementById('confirmPassword');
            const strengthProgress = document.getElementById('strength-progress');
            const strengthText = document.getElementById('strength-text');

            // Initialize form validation
            const validator = new FormValidator(resetForm, {
                validateOnBlur: true,
                validateOnInput: true,
                showSuccessStates: false
            });

            // Setup validation rules
            validator.setupRequiredField('newPassword', 'Password is required');
            validator.setupPasswordField('newPassword', 8, true);

            validator.setupRequiredField('confirmPassword', 'Please confirm your password');
            validator.setupMatchField('confirmPassword', 'newPassword', 'Passwords do not match');

            // Password visibility toggle
            const passwordToggle = document.querySelector('.password-toggle');
            if (passwordToggle) {
                passwordToggle.addEventListener('click', function () {
                    const icon = this.querySelector('.material-icons');

                    if (passwordInput.type === 'password') {
                        passwordInput.type = 'text';
                        icon.textContent = 'visibility';
                    } else {
                        passwordInput.type = 'password';
                        icon.textContent = 'visibility_off';
                    }
                });
            }
            
            // Password strength indicator
            if (passwordInput && strengthProgress && strengthText) {
                passwordInput.addEventListener('input', function() {
                    const value = passwordInput.value;
                    let strength = 0;
                    
                    // Check password length
                    if (value.length >= 8) {
                        strength += 25;
                    }
                    
                    // Check for uppercase letters
                    if (/[A-Z]/.test(value)) {
                        strength += 25;
                    }
                    
                    // Check for lowercase letters
                    if (/[a-z]/.test(value)) {
                        strength += 25;
                    }
                    
                    // Check for numbers or special characters
                    if (/[0-9!@#$%^&*(),.?":{}|<>]/.test(value)) {
                        strength += 25;
                    }
                    
                    // Update UI
                    strengthProgress.style.width = `${strength}%`;
                    
                    if (strength === 0) {
                        strengthProgress.style.backgroundColor = '#EEEEEE';
                        strengthText.textContent = 'Password strength';
                    } else if (strength <= 25) {
                        strengthProgress.style.backgroundColor = '#F44336';
                        strengthText.textContent = 'Weak';
                    } else if (strength <= 50) {
                        strengthProgress.style.backgroundColor = '#FF9800';
                        strengthText.textContent = 'Fair';
                    } else if (strength <= 75) {
                        strengthProgress.style.backgroundColor = '#2196F3';
                        strengthText.textContent = 'Good';
                    } else {
                        strengthProgress.style.backgroundColor = '#4CAF50';
                        strengthText.textContent = 'Strong';
                    }
                });
            }
            
            // Form validation and submission
            if (resetForm) {
                resetForm.addEventListener('submit', function(e) {
                    // Let the form submit normally to the server
                    if (!validator.validateForm()) {
                        e.preventDefault();
                        validator.focusFirstError();
                    }
                });
            }

            // Alert close functionality
            document.querySelectorAll('.alert-close').forEach(button => {
                button.addEventListener('click', function() {
                    this.closest('.alert').remove();
                });
            });
        });
    </script>
</body>
</html> 