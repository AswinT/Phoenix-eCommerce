<div class="auth-page">
  <div class="container">
    <div class="auth-container">
      <div class="auth-form-container">
        <div class="auth-header">
          <div class="auth-icon">
            <span class="material-icons">verified_user</span>
          </div>
          <p class="verification-message">
            We've sent a 6-digit verification code to<br />
            <strong class="phone-number"><%= mobile %></strong>
          </p>
          <p class="auth-subtext">
            <span class="material-icons">email</span>
            Check your email and enter the code below to complete your
            registration
          </p>
          <div class="progress-indicator">
            <div class="progress-step completed">
              <span class="material-icons">check</span>
              <span>Account Details</span>
            </div>
            <div class="progress-step active">
              <span class="material-icons">verified_user</span>
              <span>Verification</span>
            </div>
            <div class="progress-step">
              <span class="material-icons">done_all</span>
              <span>Complete</span>
            </div>
          </div>
        </div>

        <% if (typeof error !== 'undefined' && error) { %>
        <div class="alert alert-danger">
          <span class="material-icons">error</span>
          <div class="alert-content">
            <strong>Verification Failed!</strong> <%= error %>
          </div>
          <button class="alert-close">
            <span class="material-icons">close</span>
          </button>
        </div>
        <% } %> <% if (typeof success !== 'undefined' && success) { %>
        <div class="alert alert-success">
          <span class="material-icons">check_circle</span>
          <div class="alert-content">
            <strong>Success!</strong> <%= success %>
          </div>
          <button class="alert-close">
            <span class="material-icons">close</span>
          </button>
        </div>
        <% } %>

        <form
          class="auth-form"
          action="/verify-otp"
          method="POST"
          id="otpVerificationForm"
          novalidate
          data-validate
        >
          <input type="hidden" name="mobile" value="<%= mobile %>" />

          <div class="form-group">
            <label class="form-label">
              <span class="material-icons">lock</span>
              Enter Verification Code
            </label>
            <p class="input-instruction">
              Enter the 6-digit code sent to your email
            </p>
            <div class="otp-container">
              <input
                type="text"
                maxlength="1"
                class="otp-input"
                name="digit1"
                id="digit1"
                data-index="0"
                autocomplete="off"
                aria-label="Digit 1"
              />
              <input
                type="text"
                maxlength="1"
                class="otp-input"
                name="digit2"
                id="digit2"
                data-index="1"
                autocomplete="off"
                aria-label="Digit 2"
              />
              <input
                type="text"
                maxlength="1"
                class="otp-input"
                name="digit3"
                id="digit3"
                data-index="2"
                autocomplete="off"
                aria-label="Digit 3"
              />
              <input
                type="text"
                maxlength="1"
                class="otp-input"
                name="digit4"
                id="digit4"
                data-index="3"
                autocomplete="off"
                aria-label="Digit 4"
              />
              <input
                type="text"
                maxlength="1"
                class="otp-input"
                name="digit5"
                id="digit5"
                data-index="4"
                autocomplete="off"
                aria-label="Digit 5"
              />
              <input
                type="text"
                maxlength="1"
                class="otp-input"
                name="digit6"
                id="digit6"
                data-index="5"
                autocomplete="off"
                aria-label="Digit 6"
              />
            </div>
            <div id="otp-error" class="field-error" role="alert"></div>
            <input type="hidden" name="otp" id="otpValue" />
          </div>

          <div class="otp-timer">
            <div class="timer-icon">
              <span class="material-icons">schedule</span>
            </div>
            <div class="timer-content">
              <span class="timer-text">Code expires in</span>
              <span id="otp-timer-display" class="timer-countdown"></span>
            </div>
          </div>

          <div class="form-actions">
            <button
              type="submit"
              class="btn btn-primary btn-verify"
              id="verifyButton"
              disabled
            >
              <span class="material-icons">verified_user</span>
              <span class="btn-text">Verify & Continue</span>
              <div class="loading-spinner"></div>
            </button>
          </div>

          <div class="resend-section">
            <div class="resend-content">
              <p class="resend-text">
                <span class="material-icons">help_outline</span>
                Didn't receive the code?
              </p>
              <div class="resend-actions">
                <button
                  type="button"
                  class="btn btn-outline btn-resend"
                  id="resendButton"
                  disabled
                >
                  <span class="material-icons">refresh</span>
                  <span class="btn-text">Resend Code</span>
                </button>
                <a href="/signup" class="link-secondary">
                  <span class="material-icons">arrow_back</span>
                  Change Phone Number
                </a>
              </div>
            </div>
          </div>
        </form>

        <div class="auth-footer">
          <p>
            Need help?
            <a href="/contact" class="link-primary">Contact Support</a>
          </p>
          <p><a href="/signup" class="link-secondary">‚Üê Back to Sign Up</a></p>
        </div>
      </div>
    </div>
  </div>
</div>

<link rel="stylesheet" href="/css/user/verify-otp.css" />

<link rel="stylesheet" href="/css/form-validation.css" />

<script src="/js/form-validation.js"></script>
<script>
  document.addEventListener("DOMContentLoaded", () => {
    const otpInputs = document.querySelectorAll(".otp-input");
    const verifyBtn = document.getElementById("verifyButton");
    const resendBtn = document.getElementById("resendButton");
    const timerDisplay = document.getElementById("otp-timer-display");
    const otpValueInput = document.getElementById("otpValue");
    const errorDiv = document.getElementById("otp-error");
    const TIMER_KEY = "otp_timer_<%= mobile %>";
    const serverExpiry = Number(<%= otpExpiry %>); // ms from backend

    // Enhanced localStorage approach with remaining seconds tracking
    let expiry = serverExpiry;
    let timeLeft;
    const stored = localStorage.getItem(TIMER_KEY);
    
    if (stored) {
      const saved = JSON.parse(stored);
      // Use remaining seconds directly if available, otherwise calculate from expiry
      if (saved.remainingSec !== undefined && saved.lastUpdated) {
        const elapsedSince = Math.floor((Date.now() - saved.lastUpdated) / 1000);
        timeLeft = Math.max(0, saved.remainingSec - elapsedSince);
        // Recalculate expiry based on remaining seconds
        expiry = Date.now() + (timeLeft * 1000);
      } else if (saved.expiry > Date.now()) {
        // Legacy support for old format
        expiry = saved.expiry;
        timeLeft = Math.ceil((expiry - Date.now()) / 1000) + 1;
      } else {
        timeLeft = 0;
      }
    } else {
      timeLeft = Math.ceil((expiry - Date.now()) / 1000) + 1; // pad to show full 60s
      localStorage.setItem(TIMER_KEY, JSON.stringify({ 
        expiry,
        remainingSec: timeLeft,
        lastUpdated: Date.now()
      }));
    }

    let timer = null;

    function startTimer() {
      clearInterval(timer);
      timer = setInterval(() => {
        if (timeLeft <= 0) {
          clearInterval(timer);
          timerDisplay.textContent = "00:00";
          resendBtn.disabled = false;
          showError("Code expired. Click resend.");
          localStorage.removeItem(TIMER_KEY); // Clear expired timer
        } else {
          const min = String(Math.floor(timeLeft / 60)).padStart(2, "0");
          const sec = String(timeLeft % 60).padStart(2, "0");
          timerDisplay.textContent = `${min}:${sec}`;
          timeLeft--;
          
          // Update localStorage every 5 seconds to reduce writes but maintain accuracy
          if (timeLeft % 5 === 0 || timeLeft <= 10) {
            localStorage.setItem(TIMER_KEY, JSON.stringify({
              expiry: Date.now() + (timeLeft * 1000),
              remainingSec: timeLeft,
              lastUpdated: Date.now()
            }));
          }
        }
      }, 1000);
    }

    function showError(msg) {
      errorDiv.textContent = msg;
      errorDiv.style.display = "block";
    }

    function clearError() {
      errorDiv.textContent = "";
      errorDiv.style.display = "none";
    }

    function getOTP() {
      return [...otpInputs].map(i => i.value.trim()).join("");
    }

    function checkVerifyButton() {
      verifyBtn.disabled = getOTP().length !== 6;
    }

    otpInputs.forEach((input, index) => {
      input.addEventListener("input", () => {
        input.value = input.value.replace(/\D/g, "");
        if (input.value && index < 5) otpInputs[index + 1].focus();
        clearError();
        checkVerifyButton();
      });
    });

    document.getElementById("otpVerificationForm").addEventListener("submit", e => {
      e.preventDefault();
      const otp = getOTP();
      if (otp.length !== 6) return showError("Enter all 6 digits");
      otpValueInput.value = otp;
      localStorage.removeItem(TIMER_KEY);
      e.target.submit();
    });

    resendBtn.addEventListener("click", () => {
      resendBtn.disabled = true;
      fetch("/resend-otp", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ mobile: "<%= mobile %>" })
      })
      .then(res => res.json())
      .then(data => {
        if (data.success && data.otpExpiry) {
          expiry = data.otpExpiry;
          timeLeft = 60; // Reset to full timer
          localStorage.setItem(TIMER_KEY, JSON.stringify({ 
            expiry,
            remainingSec: timeLeft,
            lastUpdated: Date.now()
          }));
          clearError();
          startTimer();
          
          // Clear OTP inputs
          otpInputs.forEach(input => input.value = "");
          otpInputs[0].focus();
          checkVerifyButton();
        } else {
          showError("Failed to resend OTP.");
          resendBtn.disabled = false;
        }
      })
      .catch(() => {
        showError("Network error.");
        resendBtn.disabled = false;
      });
    });

    // Initialize
    resendBtn.disabled = true;
    checkVerifyButton();
    if (timeLeft <= 0) {
      timerDisplay.textContent = "00:00";
      resendBtn.disabled = false;
      showError("Code expired. Click resend.");
    } else {
      startTimer();
      otpInputs[0].focus();
    }

    window.addEventListener("beforeunload", () => clearInterval(timer));
  });
</script>
